// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  image         String?
  emailVerified DateTime?
  password      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  account Account[]

  inventory Inventory?
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String  @db.Text
  session_state     String?

  User User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Inventory {
  id        String   @id @default(cuid())
  data      Json
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model Case {
  id               String  @id @default(cuid())
  name             String
  description      String?
  type             String?
  first_sale_date  String
  market_hash_name String
  rental           Boolean
  image            String
  model_player     String?

  skins Skin[]

  updatedAt DateTime @updatedAt
}

model Skin {
  id           String   @id @default(cuid())
  skin_id      String   @unique
  name         String
  description  String?
  weapon       String
  category     String?
  pattern      String?
  min_float    Float?
  max_float    Float?
  rarity_id    String
  rarity_name  String
  rarity_color String
  stattrak     Boolean
  souvenir     Boolean?
  paint_index  String?
  wears        String[]
  team         String

  case   Case?    @relation(fields: [caseId], references: [id])
  caseId String?
  images String[]
}

model VerificationToken {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
