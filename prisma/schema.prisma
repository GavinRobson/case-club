// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  image         String?
  emailVerified DateTime?
  password      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  spent         Float?
  earned        Float?

  account Account[]

  inventory Inventory?
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String  @db.Text
  session_state     String?

  User User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Inventory {
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt

  inventorySkin InventorySkin[]

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model Case {
  id               String  @id @default(cuid())
  case_id          String  @unique
  name             String
  description      String?
  type             String?
  first_sale_date  String
  market_hash_name String
  rental           Boolean
  image            String
  model_player     String?
  value            Float?

  skins Skin[] @relation("CaseSkins")

  updatedAt DateTime @updatedAt
}

model Skin {
  id                String   @id @default(cuid())
  skin_id           String   @unique
  name              String
  description       String?
  weapon            String
  category          String?
  pattern           String?
  min_float         Float?
  max_float         Float?
  rarity_id         String
  rarity_name       String
  rarity_color      String
  stattrak          Boolean
  souvenir          Boolean?
  paint_index       String?
  wears             String[]
  team              String
  market_hash_names String[]
  value             Float?

  inventorySkins InventorySkin[]
  cases          Case[]          @relation("CaseSkins")
  images         String[]
}

model InventorySkin {
  id               String  @id @default(cuid())
  name             String
  wear             String
  float            Float
  pattern_id       Int
  stattrak         Boolean
  market_hash_name String
  image            String
  value            Float?

  opened_at  DateTime @default(now())
  updated_at DateTime @updatedAt

  inventory    Inventory @relation(fields: [inventory_id], references: [id])
  inventory_id String

  skin    Skin   @relation(fields: [skin_id], references: [id])
  skin_id String
}

model VerificationToken {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
